openapi: "3.0.0"

info:
  title: TODOs API
  version: 0.1.0

servers:
  - url: http://{host}/api/v1/
    variables:
      host:
        default: localhost:4200    # development server
    description: The TODOs API server

paths:
  /todos:
    get:
      tags:
        - ToDo
      operationId: getToDos
      responses:
        '200':
          description: ToDos retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ToDo'
        '400':
          description: The request sent was not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
        '500':
          description: Internal server error. Not able to fetch data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
    post:
      tags:
        - ToDo
      operationId: createTodo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewToDo'
      responses:
        '201':
          description: ToDo is created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToDo'
        '400':
          description: The request sent was not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
        '500':
          description: Internal server error. Not able to fetch data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
  /todos/category/{category}:
    get:
      tags:
        - ToDo
      operationId: getToDosByCategory
      parameters:
        - in: path
          name: category
          schema:
            type: string
          required: true
      responses:
        '200':
          description: ToDos retrieved
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ToDo'
        '400':
          description: The request sent was not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
        '500':
          description: Internal server error. Not able to fetch data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
  /todos/{id}/done:
    patch:
      tags:
        - ToDo
      operationId: setToDoDone
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: ToDo is done
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToDo'
        '404':
          description: The ToDo was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
        '400':
          description: The request sent was not valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'
        '500':
          description: Internal server error. Not able to fetch data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestError'

components:
  schemas:
    ToDo:
      type: object
      required:
        - id
        - title
        - category
        - done
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
          maxLength: 250
        category:
          type: string
          maxLength: 100
        description:
          type: string
          maxLength: 750
        done:
          type: boolean

    NewToDo:
      type: object
      required:
        - title
        - category
      properties:
        title:
          type: string
          maxLength: 250
        category:
          type: string
          maxLength: 100
        description:
          type: string
          maxLength: 750

    RequestError:
      type: object
      properties:
        status:
          type: integer
        code:
          type: string
        message:
          type: string
